import React from "react";
import { useState } from 'react';
import axios from 'axios';
import {useNavigate} from "react-router-dom";
import '../../styles/Verify.css';
import authImg from '../../images/GoogleAuth.png'

const VerifyPage = () => {
    const [otp, setOtp] = useState("");
    const [fbMessage, setFbMessage] = useState("");
    const navigate = useNavigate()


    // Funzione per mostrare il messaggio di feedback
    const showMessage = (message, time) => {
        setFbMessage(message); // Imposta il messaggio
        setTimeout(() => {
            setFbMessage(""); // Nasconde il messaggio dopo il timeout
        }, time);
    };

    const otpVerifyHandler = async (e) => {
        e.preventDefault();

        if (!/^\d{6}$/.test(otp)) {
            showMessage("Please enter a valid OTP.", 7500);
            return;
        }

        try{
            const res = await axios.post('http://localhost:5000/api/verify-2fa',{
                otp: otp
            });
            const data = res.data;

            if (data.message === "2FA verification successful") {
                showMessage(data.message, 3000); // Messaggio di successo
                setTimeout(() => navigate("/homePage"), 3000); // Reindirizza dopo un breve ritardo
            } else {
                showMessage(data.message, 7500); // Messaggio di errore
            }
        } catch (error) {
            showMessage("An error has occurred. Retry later", 7500); // Messaggio di errore generico
        }
    };

    const handleOtpChange = (e) => {
        const value = e.target.value;

        // Consenti solo numeri e lunghezza massima di 6 cifre
        if (/^\d*$/.test(value) && value.length <= 6) {
            setOtp(value);
        }
    };

    return(
        <div className="container-v">
            <div className="toggle-v"><h1>Enter OTP</h1>
            </div>
            <form onSubmit={otpVerifyHandler}>
                <img src={authImg} alt="GogLogo" className="GogLogo"></img>
                <p>Enter the code generated by Google Authenticator:</p>
                <input value={otp} inputMode="numeric" onChange={handleOtpChange} placeholder={'OTP code'} required />
                <button type="submit">Verify OTP</button>
            </form>
            {/* Messaggio di feedback */}
            {fbMessage && <div className="feedback-message-v">{fbMessage}</div>}
        </div>
    );
};

export default VerifyPage;
